 <project default="publish2SF">
 
 	<!-- 
		CRAFTY Social
	 -->
 	
 	<property file="../../project.properties"/>
 	
 	<property name="dest_dir" location="../../target/release/" />
 	
 	<property name="src_java_dir" location="../../" />
 	<property name="src_doc_dir" location="../../target/doc" />
 	<property name="src_doc_dir" location="../../target/doc/javadoc"/>
 	<property name="project" value="CRAFTY_Social" />
 	<property name="project_unix" value="crafty-abm" />
 	
 	<property name="user" value="s-holzhauer"/>
 	<property name="remote_base_dir" value="/home/project-web/crafty-abm/htdocs"/>
 	<property name="remote_host" value="web.sourceforge.net"/>
 	
 	<property name="file_source_dir" value="${dest_dir}/"/>
 	<property name="remote_files_dir" value="/home/frs/project/${project_unix}/"/>
 	<property name="remote_host_files" value="frs.sourceforge.net"/>
 	
 	<property name="javadoc.packagenames" value="org.volante.abm.*"/>
	<property name="project.dir" location="${basedir}/../../" />
	<property name="image.type" value="svg" />
 	
	<input
    	message="Set version correctly in project.properties and pom.xml? (y/n)?"
    	validargs="y,n"
		defaultvalue="y"
    	addproperty="do.delete"
	/>
	<condition property="do.abort">
	<equals arg1="n" arg2="${do.delete}"/>
	</condition>
	<fail if="do.abort">Build aborted by user.</fail>
		
 	
 	<target name="publish2SF" depends="transferWebsite2SF, transferRelease2SF, transferJavaDoc2SF"></target>

 	<taskdef resource="net/sourceforge/ant4hg/taskdefs/antlib.xml" />	    	
    <target name="gatherInfos" description="Fetch HG and date infos">
    	<hg cmd="log" dir="./" >
    	  <arg value="-rtip"/>
    	</hg>
    	<echo message="==========================" />
    	<echo message="revision = ${ant4hg.log.revision}" />
    	<echo message="changeset = ${ant4hg.log.changeset}" />
    	<echo message="tag = ${ant4hg.log.tag}" />
    	<echo message="branch = ${ant4hg.log.branch}" />
    	<echo message="user = ${ant4hg.log.user}" />
    	<echo message="date = ${ant4hg.log.date}" />
    	<echo message="summary = ${ant4hg.log.summary}" />

    	<tstamp>
    	    <format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" locale="ENGLISH, GERMANY"/>
    	 </tstamp>
   	</target>
    
 	
 	<taskdef name="logindialog" classname="antlogindialog.PasswordTask" classpath="" />
 	<target name="queryPassword">
		<logindialog message="Login Details: " username="username" defaultusername="${user}" password="passphrase"/>
 	</target>
 	
 	
 	<target name="createWebsite" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
 		<delete>
			<fileset dir="${src_doc_dir}">
			</fileset>
		</delete>

 		<echo>"Create website..."</echo>
 		  <artifact:mvn pom="${basedir}/../../pom.xml" mavenHome="C:/Data/General/Programme/apache-maven-3.2.2" fork="true">
 		    <arg value="site:site"/>
 		  </artifact:mvn>
 	</target>
 		    	
 	<target name="createJars" depends="gatherInfos">
 	   <mkdir dir="${dest_dir}/${release}/"/>	
 	   <jar destfile="${dest_dir}/${release}/${project}_src_${release}.jar"
 	        update="false"
 	        compress="true"
 	        duplicate="add">
 	    	<fileset dir="${src_java_dir}/src"/>
 	    	<manifest>
 	            <attribute name="Built-By" value="Sascha Holzhauer, UoE"/>
 	            <attribute name="Implementation-Version"  value="${release} (revision ${svn.info.rev})"/>
 	            <attribute name="Built-Date" value="${TODAY}"/>
 	        </manifest>
 	    </jar>
 		
  	   <jar destfile="${dest_dir}/${release}/${project}_bin_${release}.jar"
  	        update="false"
  	        compress="true"
  	        duplicate="add">
  	    	<fileset dir="${src_java_dir}/bin"/>
  	    	<manifest>
 	            <attribute name="Built-By" value="Sascha Holzhauer, UoE"/>
  	            <attribute name="Implementation-Version"  value="${release} (revision ${svn.info.rev})"/>
  	            <attribute name="Built-Date" value="${TODAY}"/>
  	        </manifest>
  	    </jar>
 	</target>

 	
	<target name="createJavaDocClasses" depends="clean" description="Creates javadoc and also UML Diagrams, and deletes Map-Files">
		<echo>"Create javadoc at ${src_doc_dir}"</echo>
		<mkdir dir="${src_doc_dir}"/>
		<!-- narrrowing the packagenames more than "de.cesr.lara.components.*" causes invalid links in the map (maybe a link-provision problem...	-->
	        <javadoc packagenames="${javadoc.packagenames}" 
	        	destdir="${src_doc_dir}" 
	        	Overview="${project.dir}/config/description.html"
	        	version="true"
	        	author="false"
	        	classpath="
	        		${project.dir}/libs/junit-4.4.jar;
	        		${project.dir}/libs/log4j-1.2.8.jar;
	        		${project.dir}/libs/colt-1.2.0.jar;
	        		${project.dir}/libs/collections-generic-4.01.jar;
	        		${project.dir}/libs/jung-api-2.0.1.jar;
		        	${project.dir}/libs/geoapi-nogenerics-2.1-M2.jar;
		        	${project.dir}/libs/gt2-epsg-wkt-2.3.3.jar;
		        	${project.dir}/libs/gt2-main-2.3.3.jar;
		        	${project.dir}/libs/gt2-referencing-2.3.3.jar;
		        	${project.dir}/libs/JRI_101015.jar;
		        	${project.dir}/libs/JRI.jar;
		        	${project.dir}/libs/jscience.jar;
		        	${project.dir}/libs/jts-1.7.1.jar;
		        	${project.dir}/libs/jung-algorithms-2.0-beta1.jar;
		        	${project.dir}/libs/jung-algorithms-2.0.1.jar;
		        	${project.dir}/libs/jung-graph-impl-2.0.1.jar;
		        	${project.dir}/libs/jung-io-2.0.1.jar;
		        	${project.dir}/libs/Lara.jar;
		        	${project.dir}/libs/log4j-1.2.8.jar;
		        	${project.dir}/libs/ParMa.jar;
		        	${project.dir}/libs/repast.simphony.bin_and_src.jar;
		        	${project.dir}/libs/saf.core.runtime.jar;
		        	${project.dir}/libs/stax-api-1.0.1.jar;
		        	${project.dir}/libs/units-0.01.jar;
		        	${project.dir}/libs/Uranus.jar;
		        	${project.dir}/libs/vecmath-1.3.1.jar;
		        	${project.dir}/libs/wstx-asl-3.2.6.jar">

	        	<sourcepath>
	        		<pathelement path="${project.dir}/src"/>
	        		<pathelement path="${project.dir}/test"/>
	        	</sourcepath>
	        	
	        	<link href="http://projects.hepforge.org/jhepwork/api_extra/"/>
	        	<link href="http://jung.sourceforge.net/doc/api/"/>
	        	<link href="http://java.sun.com/javase/6/docs/api/"/>
	        	<link href="http://logging.apache.org/log4j/1.2/apidocs/"/>
	        	<link href="http://collections.sourceforge.net/api/"/>
	        	<link href="http://commons.apache.org/proper/commons-collections/apidocs/"/>
	        	
	        	<tag name="date" scope="all" description="Date:"/>
	        	
	        	<doclet name="de.cesr.tools.umlgraph.UmlGraphDoc"
	        	   	path="${project.dir}/lib_tools/UmlGraphSvg.jar">
	        	   		<param name="-enumerations" />
	        	   		<param name="-visibility" />
	        	        <param name="-inferrel" />
        	        	<param name="-inferdep" />
        	   			<param name="-useimports" />
        	   			<param name="-hide" value="java.*"/>
	        	    </doclet>
	      </javadoc>
		<delete>
			<fileset dir="${src_doc_dir}" includes="**/*.map"/>
		</delete>
		 
	</target>
 
 	
	<target name="createJavaDocPackages" depends="clean" description="generates javadoc and also UML Diagram">
		<mkdir dir="${src_doc_dir}"/>
	        <javadoc sourcepath="src" packagenames="${javadoc.packagenames}" destdir="${src_doc_dir}" classpath="lib/junit-4.4.jar;lib/log4j-1.2.8.jar;lib/collections-generic-4.01.jar;lib/commons-collections-3.2.jar;">
	        	   <doclet name="de.cesr.tools.umlgraph.UmlGraphDoc"
	        	   	path="lib_tools/UmlGraphSvg.jar">
        	        	<param name="-inferrel" />
    	        		<param name="-inferdep" />
    	   				<param name="-useimports" />
	        	    </doclet>
	        	  </javadoc>
		  <apply executable="dot" dest="${src_doc_dir}" parallel="false">
		    <arg value="-T${image.type}"/>
		    <arg value="-o"/>
		     <targetfile/>
		     <srcfile/>
		     <fileset dir="${src_doc_dir}" includes="**/*.dot"/>
		     <mapper type="glob" from="*.dot" to="*.${image.type}"/>
		  </apply>
	</target>
 	
 	
	<target name="createJavaDocSVG" depends="createJavaDocClasses" description="Generates SVG from DOT and deletes DOT">
		<echo>"Making SVG..."</echo>
		 <apply executable="dot" dest="${src_doc_dir}" parallel="false">
				    <arg value="-T${image.type}"/>
				    <arg value="-o"/>
				     <targetfile/>
				     <srcfile/>
				     <fileset dir="${src_doc_dir}" includes="**/*.dot"/>
				     <mapper type="glob" from="*.dot" to="*.${image.type}"/>
		</apply>
		<!-- TODO omit generation of PNG in Doclet -->
		<delete>
			<fileset dir="${src_doc_dir}" includes="**/*.dot"/>
		</delete>
		<delete>
			<fileset dir="${src_doc_dir}" includes="**/*.png"/>
		</delete>
	</target>
			
			
 	<target name="transferWebsite2SF" depends="queryPassword, createWebsite">
		<echo>Transfering data from ${src_doc_dir} to ${remote_base_dir}...</echo>
	 	<scp
	       todir="${user}@${remote_host}:${remote_base_dir}" 
	       password="${passphrase}"
	 	   trust="true"
	 		sftp="true" >
	 		<fileset id="myfileset" dir="${src_doc_dir}">
	 		       		<include name="**/*"/>
	 		</fileset>
	  	</scp>
 	</target>

 	
 	<target name="transferRelease2SF" depends="queryPassword, createJars">
 		<echo>Transfering data from ${file_source_dir} to ${remote_files_dir}...</echo>	
	 	<scp
	       todir="${user},${project_unix}@${remote_host_files}:${remote_files_dir}" 
	       password="${passphrase}"
	 	   trust="true"
	 		sftp="true" >
	 		<fileset id="myfilesetFiles" dir="${file_source_dir}">
	 		       		<include name="${release}/*"/>
	 		</fileset>
	  	</scp>
 	 </target>
 	
 	
 	<target name="transferJavaDoc2SF" depends="queryPassword, createJavaDocSVG">
		<echo>Transfering data from ${src_doc_dir} to ${remote_base_dir}/apidocs...</echo>
	 	<scp
	       todir="${user}@${remote_host}:${remote_base_dir}/apidocs" 
	       password="${passphrase}"
	 	   trust="true"
	 		sftp="true" >
	 		<fileset id="myfileset" dir="${src_doc_dir}">
	       		<include name="**/*"/>
			</fileset>
	  	</scp>
 	</target>
 			 
 			  		
	<target name="clean">
		<delete failonerror="no" dir="${src_doc_dir}"/>
	</target>
</project>